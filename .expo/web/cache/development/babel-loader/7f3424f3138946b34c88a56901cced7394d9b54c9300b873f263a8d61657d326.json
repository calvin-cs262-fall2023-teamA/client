{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Navigation from \"../../Navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (email === 'user@example.com' && password === 'password') {\n      navigation.navigate('MainPage');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Log in\"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email,\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin,\n      style: styles.button\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 16,\n    padding: 8\n  },\n  button: {\n    width: 50\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Navigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","navigation","navigate","style","styles","container","children","heading","placeholder","onChangeText","text","value","input","secureTextEntry","title","onPress","button","create","flex","justifyContent","padding","fontSize","fontWeight","marginBottom","height","borderColor","borderWidth","width"],"sources":["C:/Users/15714/Desktop/app/client/screens/loginscreen/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport Navigation from '../../Navigation';\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Implement the login, verify email and password\r\n    if (email === 'user@example.com' && password === 'password') {\r\n        navigation.navigate('MainPage'); // Navigate to the Main Page\r\n      }\r\n    };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Log in</Text>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n        value={email}\r\n        style={styles.input}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        onChangeText={(text) => setPassword(text)}\r\n        value={password}\r\n        secureTextEntry\r\n        style={styles.input}\r\n      />\r\n      <Button  \r\n      title=\"Login\" \r\n      onPress={handleLogin} \r\n      style={styles.button} \r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 16,\r\n    padding: 8,\r\n  },\r\n  button: {\r\n    width: 50,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,UAAU;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAExB,IAAIN,KAAK,KAAK,kBAAkB,IAAII,QAAQ,KAAK,UAAU,EAAE;MACzDG,UAAU,CAACC,QAAQ,CAAC,UAAU,CAAC;IACjC;EACF,CAAC;EAEH,OACEb,KAAA,CAACT,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnB,IAAA,CAACN,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAM,CAAM,CAAC,EAC1CnB,IAAA,CAACL,SAAS;MACR0B,WAAW,EAAC,OAAO;MACnBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKf,QAAQ,CAACe,IAAI,CAAC;MAAA,CAAC;MACvCC,KAAK,EAAEjB,KAAM;MACbS,KAAK,EAAEC,MAAM,CAACQ;IAAM,CACrB,CAAC,EACFzB,IAAA,CAACL,SAAS;MACR0B,WAAW,EAAC,UAAU;MACtBC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKX,WAAW,CAACW,IAAI,CAAC;MAAA,CAAC;MAC1CC,KAAK,EAAEb,QAAS;MAChBe,eAAe;MACfV,KAAK,EAAEC,MAAM,CAACQ;IAAM,CACrB,CAAC,EACFzB,IAAA,CAACJ,MAAM;MACP+B,KAAK,EAAC,OAAO;MACbC,OAAO,EAAEf,WAAY;MACrBG,KAAK,EAAEC,MAAM,CAACY;IAAO,CACpB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMZ,MAAM,GAAGpB,UAAU,CAACiC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDb,OAAO,EAAE;IACPc,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDX,KAAK,EAAE;IACLY,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdH,YAAY,EAAE,EAAE;IAChBH,OAAO,EAAE;EACX,CAAC;EACDJ,MAAM,EAAE;IACNW,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAerC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}